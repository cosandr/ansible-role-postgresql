---

- name: Install RPM requirements
  ansible.builtin.package:
    name:
      - python3-cryptography
      - openssl
    state: present
  tags: ["install"]

- name: Generate CA
  ansible.builtin.shell: >
    openssl req -new -x509
    -days 3650
    -extensions v3_ca
    -subj "/C=NO/O=Home/CN={{ inventory_hostname }}/E={{ my_email }}"
    -nodes
    -keyout /etc/pki/tls/private/pg-ca.key
    -out /etc/pki/tls/certs/pg-ca.crt
  args:
    creates: "/etc/pki/tls/private/pg-ca.key"
  notify: restart postgresql

- name: Generate postgresql PK
  community.crypto.openssl_privatekey:
    path: "{{ postgresql_config_path }}/server.key"
    size: 4096
    owner: "root"
    group: "postgres"
    mode: 0640
  notify: restart postgresql

- name: Generate postgresql CSR
  community.crypto.openssl_csr:
    path: "/etc/pki/tls/misc/postgres.csr"
    privatekey_path: "{{ postgresql_config_path }}/server.key"
    common_name: "{{ ansible_hostname }}"
    subject_alt_name:
      - "DNS:{{ ansible_host }}"
    owner: "root"
    group: "root"
    mode: 0600

- name: Sign postgresql CSR
  community.crypto.x509_certificate:
    path: "{{ postgresql_config_path }}/server.crt"
    csr_path: "/etc/pki/tls/misc/postgres.csr"
    provider: ownca
    ownca_path: "/etc/pki/tls/certs/pg-ca.crt"
    ownca_privatekey_path: "/etc/pki/tls/private/pg-ca.key"
  notify: restart postgresql

- name: Copy CA to pgsql
  ansible.builtin.copy:
    src: "/etc/pki/tls/certs/pg-ca.crt"
    remote_src: true
    owner: postgres
    group: postgres
    dest: "{{ postgresql_config_path }}/root.crt"
    mode: 0644
  notify: restart postgresql
